[gd_scene load_steps=24 format=2]

[ext_resource path="res://scripts/Player.cs" type="Script" id=1]
[ext_resource path="res://scripts/InventoryMenu.gd" type="Script" id=2]
[ext_resource path="res://scripts/CameraFollow.cs" type="Script" id=3]
[ext_resource path="res://tiles/test_tileset.tres" type="TileSet" id=4]
[ext_resource path="res://data/inventory_menu.tres" type="StyleBox" id=5]
[ext_resource path="res://data/PauseMenuTheme.tres" type="Theme" id=6]
[ext_resource path="res://scripts/UIManager.gd" type="Script" id=7]
[ext_resource path="res://scripts/MenuSubContainer.gd" type="Script" id=8]
[ext_resource path="res://scripts/LeftSide.gd" type="Script" id=9]
[ext_resource path="res://scripts/RightSide.gd" type="Script" id=10]
[ext_resource path="res://data/MC_front.png" type="Texture" id=11]
[ext_resource path="res://scripts/TopLeft.gd" type="Script" id=12]
[ext_resource path="res://data/pixeldroidMenuRegular.ttf" type="DynamicFontData" id=13]
[ext_resource path="res://scripts/JournalButton.gd" type="Script" id=14]
[ext_resource path="res://scripts/BottomLeft.gd" type="Script" id=15]
[ext_resource path="res://scripts/HealthBarContainer.gd" type="Script" id=16]
[ext_resource path="res://scripts/InventoryBorder.gd" type="Script" id=17]
[ext_resource path="res://data/red.jpg" type="Texture" id=18]
[ext_resource path="res://scripts/PlayerOverview.gd" type="Script" id=19]
[ext_resource path="res://scripts/PanelContainer.gd" type="Script" id=20]


[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 75, 75 )

[sub_resource type="CSharpScript" id=2]
script/source = "using Godot;
using System;

public class PlayerCollision : CollisionShape2D
{
	// Declare member variables here. Examples:
	// private int a = 2;
	// private string b = \"text\";
	
	private float width;
	private float height;

	// Called when the node enters the scene tree for the first time.
	public override void _Ready()
	{
		RectangleShape2D colliderShape = Shape as RectangleShape2D;
		width = colliderShape.Extents.x * 2;
		height = colliderShape.Extents.y * 2;
	}

	public Godot.Collections.Dictionary GetCollisionDirection() {
		// Define all positions for startingRays
		Vector2 topLeft = GlobalPosition + new Vector2(-width, height);
		Vector2 topMid = GlobalPosition + new Vector2(0, height);
		Vector2 topRight = GlobalPosition + new Vector2(width, height);
		Vector2 midRight = GlobalPosition + new Vector2(width, 0);
		Vector2 botRight = GlobalPosition + new Vector2(width, -height);
		Vector2 botMid = GlobalPosition + new Vector2(0, -height);
		Vector2 botLeft = GlobalPosition + new Vector2(-width, -height);
		Vector2 midLeft = GlobalPosition + new Vector2(-width, 0);
		
		// We are going to create rays at each start positions in this order
		Vector2[] rayStartPositions = { topLeft, topMid, topRight,
										topRight, midRight, botRight,
										botRight, botMid, botLeft,
										botLeft, midLeft, topLeft };
		
		// Each ray we create is associated with a direction
		string[] directions = { \"up\", \"up\", \"up\",
								\"right\", \"right\", \"right\",
								\"down\", \"down\", \"down\",
								\"left\", \"left\", \"left\" };
		
		// Each direction string corresponds to Vector2 direction
		var directionToVector = new Godot.Collections.Dictionary();
		directionToVector[\"up\"] = new Vector2(0f, 0.1f);
		directionToVector[\"right\"] = new Vector2(0.1f, 0f);
		directionToVector[\"down\"] = new Vector2(0f, -0.1f);
		directionToVector[\"left\"] = new Vector2(-0.1f, 0f);
		
		// Store which directions got hit
		var isCollisionHit = new Godot.Collections.Dictionary();
		isCollisionHit[\"up\"] = false;
		isCollisionHit[\"right\"] = false;
		isCollisionHit[\"down\"] = false;
		isCollisionHit[\"left\"] = false;
		
		int n = rayStartPositions.Length;
		var spaceState = GetWorld2d().DirectSpaceState;
		
		// Iterate over each start position to create rays & detect collisions
		for (int i = 0; i < n; ++i) {
			if ((bool) isCollisionHit[directions[i]]) // We can skip if this direction
				continue;                      // already got a hit
			
			GD.Print(rayStartPositions[i]);
			var result = spaceState.IntersectRay(
				rayStartPositions[i],
				(Vector2) directionToVector[directions[i]],
				new Godot.Collections.Array { this }
			);
			
			if (result.Count > 0)  // TODO: Add check for collision tag
				isCollisionHit[directions[i]] = true;
		}
		
		return isCollisionHit;
	}
	
	public override void _Draw()
	{
		// Define all positions for startingRays
		Vector2 topLeft = GlobalPosition + new Vector2(-width, height);
		Vector2 topMid = GlobalPosition + new Vector2(0, height);
		Vector2 topRight = GlobalPosition + new Vector2(width, height);
		Vector2 midRight = GlobalPosition + new Vector2(width, 0);
		Vector2 botRight = GlobalPosition + new Vector2(width, -height);
		Vector2 botMid = GlobalPosition + new Vector2(0, -height);
		Vector2 botLeft = GlobalPosition + new Vector2(-width, -height);
		Vector2 midLeft = GlobalPosition + new Vector2(-width, 0);
		
		// We are going to create rays at each start positions in this order
		Vector2[] rayStartPositions = { topLeft, topMid, topRight,
										topRight, midRight, botRight,
										botRight, botMid, botLeft,
										botLeft, midLeft, topLeft };
		
		// Each ray we create is associated with a direction
		string[] directions = { \"up\", \"up\", \"up\",
								\"right\", \"right\", \"right\",
								\"down\", \"down\", \"down\",
								\"left\", \"left\", \"left\" };
		
		// Each direction string corresponds to Vector2 direction
		var directionToVector = new Godot.Collections.Dictionary();
		directionToVector[\"up\"] = new Vector2(0f, 1f);
		directionToVector[\"right\"] = new Vector2(1f, 0f);
		directionToVector[\"down\"] = new Vector2(0f, 1f);
		directionToVector[\"left\"] = new Vector2(1f, 0f);
		
		int n = rayStartPositions.Length;
		var spaceState = GetWorld2d().DirectSpaceState;
		
		// Iterate over each start position to draw rays
		for (int i = 0; i < n; ++i) {
			DrawCircle(rayStartPositions[i], 10f, Colors.Blue);
			DrawLine(rayStartPositions[i], (Vector2) directionToVector[directions[i]], Colors.Red, 1f);
		}
	}
}
"

[sub_resource type="DynamicFont" id=3]
size = 30
font_data = ExtResource( 13 )

[sub_resource type="AtlasTexture" id=3]
flags = 4
atlas = ExtResource( 6 )
region = Rect2( 0, 0, 32, 32 )

[sub_resource type="AtlasTexture" id=4]
flags = 4
atlas = ExtResource( 6 )
region = Rect2( 32, 0, 32, 32 )

[sub_resource type="AtlasTexture" id=5]
flags = 4
atlas = ExtResource( 6 )
region = Rect2( 64, 0, 32, 32 )

[sub_resource type="AtlasTexture" id=6]
flags = 4
atlas = ExtResource( 6 )
region = Rect2( 96, 0, 32, 32 )

[sub_resource type="AtlasTexture" id=8]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 32, 0, 32, 32 )

[sub_resource type="AtlasTexture" id=7]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 0, 0, 32, 32 )

[sub_resource type="AtlasTexture" id=10]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 96, 0, 32, 32 )

[sub_resource type="AtlasTexture" id=9]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 64, 0, 32, 32 )

[sub_resource type="AtlasTexture" id=11]
flags = 4
atlas = ExtResource( 7 )
region = Rect2( 0, 0, 32, 32 )

[sub_resource type="AtlasTexture" id=12]
flags = 4
atlas = ExtResource( 7 )
region = Rect2( 32, 0, 32, 32 )

[sub_resource type="AtlasTexture" id=13]
flags = 4
atlas = ExtResource( 7 )
region = Rect2( 64, 0, 32, 32 )

[sub_resource type="AtlasTexture" id=14]
flags = 4
atlas = ExtResource( 7 )
region = Rect2( 96, 0, 32, 32 )

[sub_resource type="AtlasTexture" id=15]
flags = 4
atlas = ExtResource( 5 )
region = Rect2( 0, 0, 32, 32 )

[sub_resource type="AtlasTexture" id=16]
flags = 4
atlas = ExtResource( 5 )
region = Rect2( 32, 0, 32, 32 )

[sub_resource type="AtlasTexture" id=17]
flags = 4
atlas = ExtResource( 5 )
region = Rect2( 64, 0, 32, 32 )

[sub_resource type="AtlasTexture" id=18]
flags = 4
atlas = ExtResource( 5 )
region = Rect2( 96, 0, 32, 32 )

[sub_resource type="SpriteFrames" id=19]
animations = [ {
"frames": [ SubResource( 3 ), SubResource( 4 ), SubResource( 5 ), SubResource( 6 ) ],
"loop": true,
"name": "back_walk",
"speed": 5.0
}, {
"frames": [ SubResource( 8 ), SubResource( 7 ), SubResource( 10 ), SubResource( 9 ) ],
"loop": true,
"name": "front_walk",
"speed": 5.0
}, {
"frames": [ SubResource( 11 ), SubResource( 12 ), SubResource( 13 ), SubResource( 14 ) ],
"loop": true,
"name": "left_walk",
"speed": 5.0
}, {
"frames": [ SubResource( 15 ), SubResource( 16 ), SubResource( 17 ), SubResource( 18 ) ],
"loop": true,
"name": "right_walk",
"speed": 5.0
} ]


[node name="Node2D" type="Node2D"]

[node name="TileMap" type="TileMap" parent="."]
scale = Vector2( 2, 2 )
tile_set = ExtResource( 4 )
cell_size = Vector2( 32, 32 )
format = 1
tile_data = PoolIntArray( -589817, 1, 0, -589816, 1, 0, -589815, 1, 0, -589814, 1, 0, -458762, 1, 0, -458761, 1, 0, -458760, 1, 0, -458759, 1, 0, -458758, 1, 0, -458757, 1, 0, -458756, 1, 0, -458755, 1, 0, -458754, 1, 0, -458753, 1, 0, -524288, 1, 0, -524287, 1, 0, -524286, 1, 0, -524285, 1, 0, -524284, 1, 0, -524283, 1, 0, -524282, 1, 0, -524281, 1, 0, -524280, 1, 0, -524279, 1, 0, -524278, 1, 0, -524277, 1, 0, -393226, 1, 0, -393225, 0, 0, -393224, 0, 0, -393223, 0, 0, -393222, 0, 0, -393221, 0, 0, -393220, 0, 0, -393219, 0, 0, -393218, 0, 0, -393217, 0, 0, -458752, 0, 0, -458751, 0, 0, -458750, 0, 0, -458749, 0, 0, -458748, 0, 0, -458747, 0, 0, -458746, 0, 0, -458745, 0, 0, -458744, 0, 0, -458743, 0, 0, -458742, 0, 0, -458741, 1, 0, -327690, 1, 0, -327689, 0, 0, -327688, 0, 0, -327687, 0, 0, -327686, 0, 0, -327685, 0, 0, -327684, 0, 0, -327683, 0, 0, -327682, 0, 0, -327681, 0, 0, -393216, 0, 0, -393215, 0, 0, -393214, 0, 0, -393213, 0, 0, -393212, 0, 0, -393211, 0, 0, -393210, 0, 0, -393209, 0, 0, -393208, 0, 0, -393207, 0, 0, -393206, 0, 0, -393205, 1, 0, -262154, 1, 0, -262153, 0, 0, -262152, 0, 0, -262151, 0, 0, -262150, 0, 0, -262149, 0, 0, -262148, 0, 0, -262147, 0, 0, -262146, 0, 0, -262145, 0, 0, -327680, 0, 0, -327679, 0, 0, -327678, 0, 0, -327677, 0, 0, -327676, 0, 0, -327675, 0, 0, -327674, 0, 0, -327673, 0, 0, -327672, 0, 0, -327671, 0, 0, -327670, 0, 0, -327669, 1, 0, -196618, 1, 0, -196617, 0, 0, -196616, 0, 0, -196615, 0, 0, -196614, 0, 0, -196613, 0, 0, -196612, 0, 0, -196611, 0, 0, -196610, 0, 0, -196609, 0, 0, -262144, 0, 0, -262143, 0, 0, -262142, 0, 0, -262141, 0, 0, -262140, 0, 0, -262139, 0, 0, -262138, 0, 0, -262137, 0, 0, -262136, 0, 0, -262135, 0, 0, -262134, 0, 0, -262133, 1, 0, -131082, 1, 0, -131081, 0, 0, -131080, 0, 0, -131079, 0, 0, -131078, 0, 0, -131077, 0, 0, -131076, 0, 0, -131075, 0, 0, -131074, 0, 0, -131073, 0, 0, -196608, 0, 0, -196607, 0, 0, -196606, 0, 0, -196605, 0, 0, -196604, 0, 0, -196603, 0, 0, -196602, 0, 0, -196601, 0, 0, -196600, 0, 0, -196599, 0, 0, -196598, 0, 0, -196597, 1, 0, -65546, 1, 0, -65545, 0, 0, -65544, 0, 0, -65543, 0, 0, -65542, 0, 0, -65541, 0, 0, -65540, 0, 0, -65539, 0, 0, -65538, 0, 0, -65537, 0, 0, -131072, 0, 0, -131071, 0, 0, -131070, 0, 0, -131069, 0, 0, -131068, 0, 0, -131067, 0, 0, -131066, 0, 0, -131065, 0, 0, -131064, 0, 0, -131063, 0, 0, -131062, 0, 0, -131061, 1, 0, -10, 1, 0, -9, 0, 0, -8, 0, 0, -7, 0, 0, -6, 0, 0, -5, 0, 0, -4, 0, 0, -3, 0, 0, -2, 0, 0, -1, 0, 0, -65536, 0, 0, -65535, 0, 0, -65534, 0, 0, -65533, 0, 0, -65532, 0, 0, -65531, 0, 0, -65530, 0, 0, -65529, 0, 0, -65528, 0, 0, -65527, 0, 0, -65526, 0, 0, -65525, 1, 0, 65526, 1, 0, 65527, 0, 0, 65528, 0, 0, 65529, 0, 0, 65530, 0, 0, 65531, 0, 0, 65532, 0, 0, 65533, 0, 0, 65534, 0, 0, 65535, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 3, 0, 0, 4, 0, 0, 5, 0, 0, 6, 0, 0, 7, 0, 0, 8, 0, 0, 9, 0, 0, 10, 0, 0, 11, 1, 0, 131062, 1, 0, 131063, 0, 0, 131064, 0, 0, 131065, 0, 0, 131066, 0, 0, 131067, 0, 0, 131068, 0, 0, 131069, 0, 0, 131070, 0, 0, 131071, 0, 0, 65536, 0, 0, 65537, 0, 0, 65538, 0, 0, 65539, 0, 0, 65540, 0, 0, 65541, 0, 0, 65542, 0, 0, 65543, 0, 0, 65544, 0, 0, 65545, 0, 0, 65546, 0, 0, 65547, 1, 0, 196598, 1, 0, 196599, 0, 0, 196600, 0, 0, 196601, 0, 0, 196602, 0, 0, 196603, 0, 0, 196604, 0, 0, 196605, 0, 0, 196606, 0, 0, 196607, 0, 0, 131072, 0, 0, 131073, 0, 0, 131074, 0, 0, 131075, 0, 0, 131076, 0, 0, 131077, 0, 0, 131078, 0, 0, 131079, 0, 0, 131080, 0, 0, 131081, 0, 0, 131082, 0, 0, 131083, 1, 0, 262134, 1, 0, 262135, 0, 0, 262136, 0, 0, 262137, 0, 0, 262138, 0, 0, 262139, 0, 0, 262140, 0, 0, 262141, 0, 0, 262142, 0, 0, 262143, 0, 0, 196608, 0, 0, 196609, 0, 0, 196610, 0, 0, 196611, 0, 0, 196612, 0, 0, 196613, 0, 0, 196614, 0, 0, 196615, 0, 0, 196616, 0, 0, 196617, 0, 0, 196618, 0, 0, 196619, 1, 0, 327670, 1, 0, 327671, 0, 0, 327672, 0, 0, 327673, 0, 0, 327674, 0, 0, 327675, 0, 0, 327676, 0, 0, 327677, 0, 0, 327678, 0, 0, 327679, 0, 0, 262144, 0, 0, 262145, 0, 0, 262146, 0, 0, 262147, 0, 0, 262148, 0, 0, 262149, 0, 0, 262150, 0, 0, 262151, 0, 0, 262152, 0, 0, 262153, 0, 0, 262154, 0, 0, 262155, 1, 0, 393206, 1, 0, 393207, 1, 0, 393208, 1, 0, 393209, 1, 0, 393210, 1, 0, 393211, 1, 0, 393212, 1, 0, 393213, 1, 0, 393214, 1, 0, 393215, 1, 0, 327680, 1, 0, 327681, 1, 0, 327682, 1, 0, 327683, 1, 0, 327684, 1, 0, 327685, 1, 0, 327686, 1, 0, 327687, 1, 0, 327688, 1, 0, 327689, 1, 0, 327690, 1, 0, 327691, 1, 0 )

[node name="Player" type="KinematicBody2D" parent="."]
script = ExtResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="Player"]
scale = Vector2( 0.44, 0.44 )
shape = SubResource( 1 )
script = SubResource( 2 )

[node name="UIManager" type="Node2D" parent="."]
position = Vector2( 9, 9 )
script = ExtResource( 7 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="Player"]
scale = Vector2( 3.6, 3.6 )
frames = SubResource( 19 )
animation = "front_walk"

[node name="Camera2D" type="Camera2D" parent="."]
current = true
script = ExtResource( 3 )

[node name="BigMenuBorder" type="PanelContainer" parent="Camera2D"]
margin_left = 9.0
margin_top = 9.0
margin_right = 57.0
margin_bottom = 51.0
theme = ExtResource( 6 )
custom_styles/panel = ExtResource( 5 )
script = ExtResource( 2 )

[node name="MenuSubContainer" type="HBoxContainer" parent="Camera2D/BigMenuBorder"]
margin_left = 5.0
margin_top = 5.0
margin_right = 180.0
margin_bottom = 143.0
script = ExtResource( 8 )

[node name="LeftSide" type="VBoxContainer" parent="Camera2D/BigMenuBorder/MenuSubContainer"]
margin_right = 171.0
margin_bottom = 138.0
script = ExtResource( 9 )

[node name="TopLeft" type="HBoxContainer" parent="Camera2D/BigMenuBorder/MenuSubContainer/LeftSide"]
margin_right = 171.0
margin_bottom = 120.0
script = ExtResource( 12 )

[node name="PanelContainer" type="PanelContainer" parent="Camera2D/BigMenuBorder/MenuSubContainer/LeftSide/TopLeft"]
margin_right = 14.0
margin_bottom = 120.0
script = ExtResource( 20 )

[node name="AspectRatioContainer" type="AspectRatioContainer" parent="Camera2D/BigMenuBorder/MenuSubContainer/LeftSide/TopLeft/PanelContainer"]
margin_left = 7.0
margin_top = 7.0
margin_right = 7.0
margin_bottom = 113.0
size_flags_horizontal = 3
size_flags_vertical = 3
stretch_mode = 3

[node name="PlayerOverview" type="TextureRect" parent="Camera2D/BigMenuBorder/MenuSubContainer/LeftSide/TopLeft/PanelContainer/AspectRatioContainer"]
margin_left = -53.0
margin_right = 53.0
margin_bottom = 106.0
size_flags_horizontal = 3
size_flags_vertical = 3
texture = ExtResource( 11 )
expand = true
script = ExtResource( 19 )

[node name="HealthBarContainer" type="VBoxContainer" parent="Camera2D/BigMenuBorder/MenuSubContainer/LeftSide/TopLeft"]
margin_left = 18.0
margin_right = 167.0
margin_bottom = 120.0
alignment = 1
script = ExtResource( 16 )

[node name="Label" type="Label" parent="Camera2D/BigMenuBorder/MenuSubContainer/LeftSide/TopLeft/HealthBarContainer"]
margin_right = 149.0
margin_bottom = 24.0
size_flags_horizontal = 3
size_flags_vertical = 3
custom_fonts/font = SubResource( 3 )
text = "health"

[node name="ColorRect2" type="ColorRect" parent="Camera2D/BigMenuBorder/MenuSubContainer/LeftSide/TopLeft/HealthBarContainer"]
margin_top = 28.0
margin_right = 149.0
margin_bottom = 58.0
rect_min_size = Vector2( 0, 30 )
size_flags_horizontal = 3
size_flags_vertical = 3
color = Color( 0.0784314, 0.721569, 0.0901961, 1 )

[node name="Label2" type="Label" parent="Camera2D/BigMenuBorder/MenuSubContainer/LeftSide/TopLeft/HealthBarContainer"]
margin_top = 62.0
margin_right = 149.0
margin_bottom = 86.0
size_flags_horizontal = 3
size_flags_vertical = 3
custom_fonts/font = SubResource( 3 )
text = "mental health"

[node name="ColorRect" type="ColorRect" parent="Camera2D/BigMenuBorder/MenuSubContainer/LeftSide/TopLeft/HealthBarContainer"]
margin_top = 90.0
margin_right = 149.0
margin_bottom = 120.0
rect_min_size = Vector2( 0, 30 )
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="JournalButton" type="TextureButton" parent="Camera2D/BigMenuBorder/MenuSubContainer/LeftSide/TopLeft"]
margin_left = 171.0
margin_right = 171.0
margin_bottom = 120.0
texture_normal = ExtResource( 18 )
expand = true
script = ExtResource( 14 )

[node name="BottomLeft" type="VBoxContainer" parent="Camera2D/BigMenuBorder/MenuSubContainer/LeftSide"]
margin_top = 124.0
margin_right = 171.0
margin_bottom = 138.0
script = ExtResource( 15 )

[node name="InventoryBorder" type="PanelContainer" parent="Camera2D/BigMenuBorder/MenuSubContainer/LeftSide/BottomLeft"]
margin_right = 171.0
margin_bottom = 10.0
custom_styles/panel = ExtResource( 5 )
script = ExtResource( 17 )

[node name="Inventory" type="HBoxContainer" parent="Camera2D/BigMenuBorder/MenuSubContainer/LeftSide/BottomLeft/InventoryBorder"]
margin_left = 5.0
margin_top = 5.0
margin_right = 166.0
margin_bottom = 5.0

[node name="Skills" type="HBoxContainer" parent="Camera2D/BigMenuBorder/MenuSubContainer/LeftSide/BottomLeft"]
margin_top = 14.0
margin_right = 171.0
margin_bottom = 14.0

[node name="RightSide" type="VBoxContainer" parent="Camera2D/BigMenuBorder/MenuSubContainer"]
margin_left = 175.0
margin_right = 175.0
margin_bottom = 138.0
script = ExtResource( 10 )

[node name="ColorRect" type="ColorRect" parent="Camera2D/BigMenuBorder/MenuSubContainer/RightSide"]
